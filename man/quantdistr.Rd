% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantdistr.R
\name{quantdistr}
\alias{quantdistr}
\alias{quantcondicional}
\alias{quantmarginal}
\title{Quantile distribution from samples}
\usage{
quantcondicional(
  samplematrix,
  dates,
  choosedates = dates,
  quant = 0.5,
  randomsamples = 10
)

quantmarginal(
  samplematrix,
  dates,
  choosedates = dates,
  quant = 0.5,
  w.days = 7,
  w.years = 2,
  randomsamples = 10
)
}
\arguments{
\item{samplematrix}{Matrix of samples for each day obtained by the samplerstan function.}

\item{dates}{Year and day of the year data of, at least, all the days needed to obtain the quantiles desired.}

\item{choosedates}{Year and day of the year data of the days that we want to obtain the quantiles from.}

\item{quant}{Array of the quantiles that we want to obtain.}

\item{randomsamples}{An integer that says how many new random samples have been obtained from each extracted sample in the samplerstan function.}

\item{w.days}{For the marginal quantiles, a window of "close or similar" days data is considered to avoid the previous day dependence. Then, to obtain the marginal quantiles of each day, we consider the data of that day plus the data of the w.days next days and the w.days previous days.}

\item{w.years}{Similar to the use of w.days, besides the window of 2*w.days+1 days, the marginal quantiles will also be obtained using the data of the respective days window on the next w.years years and the previous w.years years.}
}
\description{
Given a matrix of samples for every day (like the one obtained by the function samplerstan of this library), we obtain enough samples of the desired conditional or marginal quantiles of each day's distribution to represent distributions of those quantiles.
}
\examples{
auxiliar<- read.table( 'Tmax_Aragon.txt', header=T, dec='.'  )
auxiliar$sin1 <- sin( (auxiliar$day.year-1)/366  *pi *2 )
auxiliar$cos1 <- cos( (auxiliar$day.year-1)/366  *pi *2 )
auxiliar$sin2 <- sin( (auxiliar$day.year-1)/366  *pi *4 )
auxiliar$cos2 <- cos( (auxiliar$day.year-1)/366  *pi *4 )
auxiliar$sin3 <- sin( (auxiliar$day.year-1)/366  *pi *6 )
auxiliar$cos3 <- cos( (auxiliar$day.year-1)/366  *pi *6 )
auxiliar$sin4 <- sin( (auxiliar$day.year-1)/366  *pi *8 )
auxiliar$cos4 <- cos( (auxiliar$day.year-1)/366  *pi *8 )
auxiliar$sin5 <- sin( (auxiliar$day.year-1)/366  *pi *10 )
auxiliar$cos5 <- cos( (auxiliar$day.year-1)/366  *pi *10 )
auxiliar$sin6 <- sin( (auxiliar$day.year-1)/366  *pi *12 )
auxiliar$cos6 <- cos( (auxiliar$day.year-1)/366  *pi *12 )

#Zaragoza
modelo.lm<- ajuste.parada(places[13], auxiliar)
aux.X <- model.matrix(modelo.lm[[modelo.lm$mejor_modelo]])[-1,]
aux.X.sigma2 <- model.matrix(modelo.lm[[modelo.lm$mejor_modelo_var]])[-1,]

samples<-samplerstan(aux.X,aux.X.sigma2,modelos.rstan.jul[[places[13]]],extractedsamples=200,randomsamples=200)

quantilematrix<-quantcondicional(samples,0.95)
marginquantilematrix<-quantmarginal(samples,auxiliar[-c(1,2),c(1,4)],0.95,randomsamples=200)
empiricquantilevector<-quantmarginal(auxiliar[places[13]],auxiliar[-c(1,2),c(1,4)],0.95,randomsamples=1)

#Test de distribuciÃ³n de quantiles
aux.day1<-sum(marginquantilematrix[1,]>empiricquantilevector[1,])/length(marginquantilematrix[1,])
for(i in 1:length(marginquantilematrix[,1])){
 print(sum(marginquantilematrix[i,]>empiricquantilevector[i,])/length(marginquantilematrix[i,]))
}


#Pallaruelo (most complex model)
modelo.lm<- ajuste.parada(places[15], auxiliar)
aux.X <- model.matrix(modelo.lm[[modelo.lm$mejor_modelo]])[-1,]
aux.X.sigma2 <- model.matrix(modelo.lm[[modelo.lm$mejor_modelo_var]])[-1,]

samples<-samplerstan(aux.X,aux.X.sigma2,modelos.rstan.jul[[places[15]]])

quantilematrix<-quantcondicional(samples,0.95)

#Yesa (simplest model)
modelo.lm<- ajuste.parada(places[18], auxiliar)
aux.X <- model.matrix(modelo.lm[[modelo.lm$mejor_modelo]])[-1,]
aux.X.sigma2 <- model.matrix(modelo.lm[[modelo.lm$mejor_modelo_var]])[-1,]

samples<-samplerstan(aux.X,aux.X.sigma2,modelos.rstan.jul[[places[18]]])

quantilematrix<-quantcondicional(samples,0.95)

}
